---
title: "Google Earth Engine"
format: html
---

## **Summary**

This week, we finally started using Google Earth Engine (GEE), and honestly, it felt like a game changer compared to earlier tools like SNAP. GEE makes satellite image analysis way more practical and less time-consuming. We went through the basics: how to access and manipulate satellite imagery, filter and scale values, join images, clip them, and even perform Principal Component Analysis (PCA).

One thing to mention is that GEE runs on JavaScript, which sounds intimidating at first, but so far, we’ve only used relatively simple commands, so it’s not that bad. I have summarized some of the main things to remember when using Javascript in GEE, in the following image:

*Image 1:* *Main JavaScript features to keep in mind when using GEE*

![](images/w6_javascript.png){fig-align="center" width="600"}

Also, some words to keep in mind when working in GEE have been summarized here:

| GEE Elements        | Meaning                                             |
|---------------------|---------------------------------------------------|
| *Image*             | Raster                                              |
| *Feature*           | Vector                                              |
| *ImageCollection*   | A stack of images                                   |
| *FeatureCollection* | A stack of features                                 |
| *Client side*       | Front end: The part that users interact with        |
| *Server side*       | Back end: Where the data is retrieved and processed |

A key takeaway is that using GEE’s built-in server side functions is way better performance wise. So, for example, instead of writing traditional loops, we should use functions like `.map()` to speed things up as they have been optimized for GEE. (this was mentioned and emphasized A LOT, so good to keep in mind)

Other important concepts:

-   **Scale & Resolution**: GEE aggregates data based on zoom level—so the further you zoom out, the bigger each pixel represents. Scale and resolution are always linked!

-   **Projection**: Everything is converted to the Mercator projection by default

-   **Filtering**: To avoid loading excessive data, we always filter by time and spatial bounds

-   **Operations & Applications**: GEE lets us perform geometric operations, corrections, enhancements, and even advanced tasks like machine learning, classification, and deep learning

### Practical

In the practical, we applied these concepts to the city of Delhi, but I also decided to analyze a Peruvian city following the same steps. It was interesting to apply the techniques in a familiar context, though I encountered limitations, such as needing to increase the cloud presence threshold to obtain enough images. But overall it was amazing to finally use GEE and see how fast and practical it was to load the data for anywhere in the world and run the analysis.

*Image 2:* *PCA analysis of Iquitos, Peru*

![](images/w6_iquitos.png){fig-align="center"}

## **Applications**

One of the things that amazed me the most this week was GEE’s massive satellite data catalog, which opens the door for a huge range of applications. So for this week's entry instead of focusing on two different research, I decided to change it a bit and first give a general overview of some of the datasets in the catalog that I found more interesting so I can have them on hand for future referece.

*Image 3: Five selected datasets available in GEE*

![](images/gee_app.png){fig-align="center"}

[Source](https://developers.google.com/earth-engine/datasets)

I decided to focus on the GEE Catalog's category of Human Dimensions. There I found very diverse maps about agriculture, infrastructure and population as the ones I displayed over here. It was interesting to see how diverse these datasets are and how most of them have a global coverage and really small cadence(which I think is valuable for regions like the Global South where detailed geospatial datasets are often not available). At least in this category of the catalog, most of the datasets are already preprocessed, so it's not only the satellite image but has already had a land classification or object detection which aligns with what was mentioned briefly in the lecture about the possibility of integrating GEE with machine learning models for those tasks(that we will cover later on the module).

Some key application areas I can think of after seeing the options available are:

-   **Environmental Monitoring**: identify rapid changes in temperature due to global warming

-   **Urban Studies**: monitoring urban expansion or urban density

-   **Agriculture & Vegetation**: monitoring forest cover, forest degradation

-   **Disaster Response**: mapping affected population and damage after natural disasters or wars

-   **Natural Resources monitoring:** identifying illegal logging, or illegal fishing

## **Reflections**

Switching to GEE made everything feel much more efficient. Compared to previous weeks, loading and manipulating large datasets (even for the whole world) was a breeze. The user interface of GEE was a bit overwhelming at first, but that’s probably just because it was my first time using it, but overall it seems that it offers many functionalities that I am looking forward to try in the next weeks. On that line, the GEE catalog made me realize how much data we have available and how using Remote Sensing is democratizing the access to many datasets that will definitely benefit research and data-informed policy making especially in countries where data availability is usually an issue, like my country. I think the possibilities are endless now! And on top of all that, GEE even allows us to build interactive web applications, definitely something I am looking to try as I am also taking the CASA25 module.

On another topic, when Ollie mentioned that even though GEE has been around for over a decade, Google could decide to shut it down at any time, it made me think that it would be such a huge loss especially after seeing how much research has been done since it was launched, but it also made me think that then it makes sense that we didn't go straight to it(even though that's what I was initially expecting) but instead we first focused on learning the theoretical concepts and understanding the logic behind what’s happening in the background. I think this way, even if in the future we have to change to another program, we will not be starting from scratch as we now know the foundations of it.
